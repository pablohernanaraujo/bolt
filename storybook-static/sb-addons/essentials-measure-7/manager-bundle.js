try {
  (() => {
    var t = __REACT__,
      {
        Children: B,
        Component: R,
        Fragment: P,
        Profiler: f,
        PureComponent: D,
        StrictMode: L,
        Suspense: w,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: E,
        cloneElement: U,
        createContext: M,
        createElement: v,
        createFactory: x,
        createRef: H,
        forwardRef: F,
        isValidElement: N,
        lazy: j,
        memo: G,
        startTransition: W,
        unstable_act: K,
        useCallback: u,
        useContext: Y,
        useDebugValue: V,
        useDeferredValue: q,
        useEffect: d,
        useId: z,
        useImperativeHandle: Z,
        useInsertionEffect: J,
        useLayoutEffect: Q,
        useMemo: X,
        useReducer: $,
        useRef: oo,
        useState: eo,
        useSyncExternalStore: no,
        useTransition: co,
        version: to,
      } = __REACT__;
    var lo = __STORYBOOK_API__,
      {
        ActiveTabs: io,
        Consumer: uo,
        ManagerContext: mo,
        Provider: po,
        RequestResponseError: So,
        addons: s,
        combineParameters: _o,
        controlOrMetaKey: bo,
        controlOrMetaSymbol: Co,
        eventMatchesShortcut: ho,
        eventToShortcut: yo,
        experimental_MockUniversalStore: go,
        experimental_UniversalStore: Ao,
        experimental_requestResponse: To,
        experimental_useUniversalStore: ko,
        isMacLike: Oo,
        isShortcutTaken: Bo,
        keyToSymbol: Ro,
        merge: Po,
        mockChannel: fo,
        optionOrAltSymbol: Do,
        shortcutMatchesShortcut: Lo,
        shortcutToHumanString: wo,
        types: m,
        useAddonState: Eo,
        useArgTypes: Uo,
        useArgs: Mo,
        useChannel: vo,
        useGlobalTypes: xo,
        useGlobals: p,
        useParameter: Ho,
        useSharedState: Fo,
        useStoryPrepared: No,
        useStorybookApi: S,
        useStorybookState: jo,
      } = __STORYBOOK_API__;
    var Vo = __STORYBOOK_COMPONENTS__,
      {
        A: qo,
        ActionBar: zo,
        AddonPanel: Zo,
        Badge: Jo,
        Bar: Qo,
        Blockquote: Xo,
        Button: $o,
        ClipboardCode: oe,
        Code: ee,
        DL: ne,
        Div: ce,
        DocumentWrapper: te,
        EmptyTabContent: re,
        ErrorFormatter: ae,
        FlexBar: Ie,
        Form: se,
        H1: le,
        H2: ie,
        H3: ue,
        H4: de,
        H5: me,
        H6: pe,
        HR: Se,
        IconButton: _,
        IconButtonSkeleton: _e,
        Icons: be,
        Img: Ce,
        LI: he,
        Link: ye,
        ListItem: ge,
        Loader: Ae,
        Modal: Te,
        OL: ke,
        P: Oe,
        Placeholder: Be,
        Pre: Re,
        ProgressSpinner: Pe,
        ResetWrapper: fe,
        ScrollArea: De,
        Separator: Le,
        Spaced: we,
        Span: Ee,
        StorybookIcon: Ue,
        StorybookLogo: Me,
        Symbols: ve,
        SyntaxHighlighter: xe,
        TT: He,
        TabBar: Fe,
        TabButton: Ne,
        TabWrapper: je,
        Table: Ge,
        Tabs: We,
        TabsState: Ke,
        TooltipLinkList: Ye,
        TooltipMessage: Ve,
        TooltipNote: qe,
        UL: ze,
        WithTooltip: Ze,
        WithTooltipPure: Je,
        Zoom: Qe,
        codeCommon: Xe,
        components: $e,
        createCopyToClipboardFunction: on,
        getStoryHref: en,
        icons: nn,
        interleaveSeparators: cn,
        nameSpaceClassNames: tn,
        resetComponents: rn,
        withReset: an,
      } = __STORYBOOK_COMPONENTS__;
    var dn = __STORYBOOK_ICONS__,
      {
        AccessibilityAltIcon: mn,
        AccessibilityIcon: pn,
        AccessibilityIgnoredIcon: Sn,
        AddIcon: _n,
        AdminIcon: bn,
        AlertAltIcon: Cn,
        AlertIcon: hn,
        AlignLeftIcon: yn,
        AlignRightIcon: gn,
        AppleIcon: An,
        ArrowBottomLeftIcon: Tn,
        ArrowBottomRightIcon: kn,
        ArrowDownIcon: On,
        ArrowLeftIcon: Bn,
        ArrowRightIcon: Rn,
        ArrowSolidDownIcon: Pn,
        ArrowSolidLeftIcon: fn,
        ArrowSolidRightIcon: Dn,
        ArrowSolidUpIcon: Ln,
        ArrowTopLeftIcon: wn,
        ArrowTopRightIcon: En,
        ArrowUpIcon: Un,
        AzureDevOpsIcon: Mn,
        BackIcon: vn,
        BasketIcon: xn,
        BatchAcceptIcon: Hn,
        BatchDenyIcon: Fn,
        BeakerIcon: Nn,
        BellIcon: jn,
        BitbucketIcon: Gn,
        BoldIcon: Wn,
        BookIcon: Kn,
        BookmarkHollowIcon: Yn,
        BookmarkIcon: Vn,
        BottomBarIcon: qn,
        BottomBarToggleIcon: zn,
        BoxIcon: Zn,
        BranchIcon: Jn,
        BrowserIcon: Qn,
        ButtonIcon: Xn,
        CPUIcon: $n,
        CalendarIcon: oc,
        CameraIcon: ec,
        CameraStabilizeIcon: nc,
        CategoryIcon: cc,
        CertificateIcon: tc,
        ChangedIcon: rc,
        ChatIcon: ac,
        CheckIcon: Ic,
        ChevronDownIcon: sc,
        ChevronLeftIcon: lc,
        ChevronRightIcon: ic,
        ChevronSmallDownIcon: uc,
        ChevronSmallLeftIcon: dc,
        ChevronSmallRightIcon: mc,
        ChevronSmallUpIcon: pc,
        ChevronUpIcon: Sc,
        ChromaticIcon: _c,
        ChromeIcon: bc,
        CircleHollowIcon: Cc,
        CircleIcon: hc,
        ClearIcon: yc,
        CloseAltIcon: gc,
        CloseIcon: Ac,
        CloudHollowIcon: Tc,
        CloudIcon: kc,
        CogIcon: Oc,
        CollapseIcon: Bc,
        CommandIcon: Rc,
        CommentAddIcon: Pc,
        CommentIcon: fc,
        CommentsIcon: Dc,
        CommitIcon: Lc,
        CompassIcon: wc,
        ComponentDrivenIcon: Ec,
        ComponentIcon: Uc,
        ContrastIcon: Mc,
        ContrastIgnoredIcon: vc,
        ControlsIcon: xc,
        CopyIcon: Hc,
        CreditIcon: Fc,
        CrossIcon: Nc,
        DashboardIcon: jc,
        DatabaseIcon: Gc,
        DeleteIcon: Wc,
        DiamondIcon: Kc,
        DirectionIcon: Yc,
        DiscordIcon: Vc,
        DocChartIcon: qc,
        DocListIcon: zc,
        DocumentIcon: Zc,
        DownloadIcon: Jc,
        DragIcon: Qc,
        EditIcon: Xc,
        EllipsisIcon: $c,
        EmailIcon: ot,
        ExpandAltIcon: et,
        ExpandIcon: nt,
        EyeCloseIcon: ct,
        EyeIcon: tt,
        FaceHappyIcon: rt,
        FaceNeutralIcon: at,
        FaceSadIcon: It,
        FacebookIcon: st,
        FailedIcon: lt,
        FastForwardIcon: it,
        FigmaIcon: ut,
        FilterIcon: dt,
        FlagIcon: mt,
        FolderIcon: pt,
        FormIcon: St,
        GDriveIcon: _t,
        GithubIcon: bt,
        GitlabIcon: Ct,
        GlobeIcon: ht,
        GoogleIcon: yt,
        GraphBarIcon: gt,
        GraphLineIcon: At,
        GraphqlIcon: Tt,
        GridAltIcon: kt,
        GridIcon: Ot,
        GrowIcon: Bt,
        HeartHollowIcon: Rt,
        HeartIcon: Pt,
        HomeIcon: ft,
        HourglassIcon: Dt,
        InfoIcon: Lt,
        ItalicIcon: wt,
        JumpToIcon: Et,
        KeyIcon: Ut,
        LightningIcon: Mt,
        LightningOffIcon: vt,
        LinkBrokenIcon: xt,
        LinkIcon: Ht,
        LinkedinIcon: Ft,
        LinuxIcon: Nt,
        ListOrderedIcon: jt,
        ListUnorderedIcon: Gt,
        LocationIcon: Wt,
        LockIcon: Kt,
        MarkdownIcon: Yt,
        MarkupIcon: Vt,
        MediumIcon: qt,
        MemoryIcon: zt,
        MenuIcon: Zt,
        MergeIcon: Jt,
        MirrorIcon: Qt,
        MobileIcon: Xt,
        MoonIcon: $t,
        NutIcon: or,
        OutboxIcon: er,
        OutlineIcon: nr,
        PaintBrushIcon: cr,
        PaperClipIcon: tr,
        ParagraphIcon: rr,
        PassedIcon: ar,
        PhoneIcon: Ir,
        PhotoDragIcon: sr,
        PhotoIcon: lr,
        PhotoStabilizeIcon: ir,
        PinAltIcon: ur,
        PinIcon: dr,
        PlayAllHollowIcon: mr,
        PlayBackIcon: pr,
        PlayHollowIcon: Sr,
        PlayIcon: _r,
        PlayNextIcon: br,
        PlusIcon: Cr,
        PointerDefaultIcon: hr,
        PointerHandIcon: yr,
        PowerIcon: gr,
        PrintIcon: Ar,
        ProceedIcon: Tr,
        ProfileIcon: kr,
        PullRequestIcon: Or,
        QuestionIcon: Br,
        RSSIcon: Rr,
        RedirectIcon: Pr,
        ReduxIcon: fr,
        RefreshIcon: Dr,
        ReplyIcon: Lr,
        RepoIcon: wr,
        RequestChangeIcon: Er,
        RewindIcon: Ur,
        RulerIcon: b,
        SaveIcon: Mr,
        SearchIcon: vr,
        ShareAltIcon: xr,
        ShareIcon: Hr,
        ShieldIcon: Fr,
        SideBySideIcon: Nr,
        SidebarAltIcon: jr,
        SidebarAltToggleIcon: Gr,
        SidebarIcon: Wr,
        SidebarToggleIcon: Kr,
        SpeakerIcon: Yr,
        StackedIcon: Vr,
        StarHollowIcon: qr,
        StarIcon: zr,
        StatusFailIcon: Zr,
        StatusIcon: Jr,
        StatusPassIcon: Qr,
        StatusWarnIcon: Xr,
        StickerIcon: $r,
        StopAltHollowIcon: oa,
        StopAltIcon: ea,
        StopIcon: na,
        StorybookIcon: ca,
        StructureIcon: ta,
        SubtractIcon: ra,
        SunIcon: aa,
        SupportIcon: Ia,
        SweepIcon: sa,
        SwitchAltIcon: la,
        SyncIcon: ia,
        TabletIcon: ua,
        ThumbsUpIcon: da,
        TimeIcon: ma,
        TimerIcon: pa,
        TransferIcon: Sa,
        TrashIcon: _a,
        TwitterIcon: ba,
        TypeIcon: Ca,
        UbuntuIcon: ha,
        UndoIcon: ya,
        UnfoldIcon: ga,
        UnlockIcon: Aa,
        UnpinIcon: Ta,
        UploadIcon: ka,
        UserAddIcon: Oa,
        UserAltIcon: Ba,
        UserIcon: Ra,
        UsersIcon: Pa,
        VSCodeIcon: fa,
        VerifiedIcon: Da,
        VideoIcon: La,
        WandIcon: wa,
        WatchIcon: Ea,
        WindowsIcon: Ua,
        WrenchIcon: Ma,
        XIcon: va,
        YoutubeIcon: xa,
        ZoomIcon: Ha,
        ZoomOutIcon: Fa,
        ZoomResetIcon: Na,
        iconList: ja,
      } = __STORYBOOK_ICONS__;
    var l = 'storybook/measure-addon',
      C = `${l}/tool`,
      h = () => {
        let [r, c] = p(),
          { measureEnabled: a } = r,
          i = S(),
          I = u(() => c({ measureEnabled: !a }), [c, a]);
        return (
          d(() => {
            i.setAddonShortcut(l, {
              label: 'Toggle Measure [M]',
              defaultShortcut: ['M'],
              actionName: 'measure',
              showInMenu: !1,
              action: I,
            });
          }, [I, i]),
          t.createElement(
            _,
            { key: C, active: a, title: 'Enable measure', onClick: I },
            t.createElement(b, null),
          )
        );
      };
    s.register(l, () => {
      s.add(C, {
        type: m.TOOL,
        title: 'Measure',
        match: ({ viewMode: r, tabId: c }) => r === 'story' && !c,
        render: () => t.createElement(h, null),
      });
    });
  })();
} catch (e) {
  console.error(
    '[Storybook] One of your manager-entries failed: ' + import.meta.url,
    e,
  );
}
