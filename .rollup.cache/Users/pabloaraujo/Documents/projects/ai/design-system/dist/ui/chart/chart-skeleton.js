import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Skeleton, SkeletonText } from '@/ui/skeleton';
export const ChartSkeleton = ({ height = 300, showLegend = false, showTitle = false, legendItems = 3, className = '', }) => {
    const chartHeight = typeof height === 'number' ? `${height}px` : height;
    return (_jsxs("div", { className: `space-y-4 ${className}`, role: "img", "aria-label": "Loading chart", children: [showTitle && (_jsx("div", { className: "flex justify-center", children: _jsx(SkeletonText, { noOfLines: 1, style: { width: '60%' } }) })), _jsxs("div", { className: "relative overflow-hidden rounded-lg border border-gray-200 bg-gray-50 dark:border-gray-700 dark:bg-gray-800", style: { height: chartHeight }, children: [_jsx("div", { className: "absolute bottom-4 left-12 right-4 flex justify-between", children: Array.from({ length: 5 }, (_, i) => (_jsx(Skeleton, { className: "h-3 w-12" }, `x-axis-${i}`))) }), _jsx("div", { className: "absolute bottom-12 left-2 top-4 flex flex-col justify-between", children: Array.from({ length: 5 }, (_, i) => (_jsx(Skeleton, { className: "h-3 w-8" }, `y-axis-${i}`))) }), _jsx("div", { className: "absolute bottom-12 left-12 right-4 top-4 flex items-end justify-between gap-2", children: Array.from({ length: 8 }, (_, i) => {
                            const height = 20 + (i % 4) * 20 + Math.sin(i) * 10;
                            return (_jsx(Skeleton, { className: "w-full", style: { height: `${height}%` } }, `bar-${i}`));
                        }) }), _jsx("div", { className: "absolute inset-0 flex items-center justify-center", children: _jsx("div", { className: "rounded-md bg-white/80 px-3 py-2 text-sm text-gray-600 shadow-sm backdrop-blur-sm dark:bg-gray-900/80 dark:text-gray-300", children: "Loading chart..." }) })] }), showLegend && (_jsx("div", { className: "flex flex-wrap items-center justify-center gap-4", children: Array.from({ length: legendItems }, (_, i) => (_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Skeleton, { className: "h-3 w-3 rounded-full" }), _jsx(SkeletonText, { noOfLines: 1, style: { width: '80px' } })] }, `legend-${i}`))) }))] }));
};
export const ChartSkeletonSimple = ({ height = 200, className = '' }) => {
    const chartHeight = typeof height === 'number' ? `${height}px` : height;
    return (_jsx("div", { className: `rounded-lg border border-gray-200 bg-gray-50 p-4 dark:border-gray-700 dark:bg-gray-800 ${className}`, role: "img", "aria-label": "Loading chart", style: { height: chartHeight }, children: _jsx("div", { className: "flex h-full items-center justify-center", children: _jsxs("div", { className: "text-center", children: [_jsx(Skeleton, { className: "mx-auto mb-2 h-8 w-8 rounded-full" }), _jsx(SkeletonText, { noOfLines: 1, style: { width: '120px' } })] }) }) }));
};
